@article{Mishra_2021,
doi = {10.1088/1742-6596/1717/1/012002},
url = {https://dx.doi.org/10.1088/1742-6596/1717/1/012002},
year = {2021},
month = {jan},
publisher = {IOP Publishing},
volume = {1717},
number = {1},
author = {Nitin Mishra and Saumya Chaturvedi and Aanchal Vij and Sunita Tripathi},
title = {Research Problems in Recommender systems},
journal = {Journal of Physics: Conference Series},
abstract = {With continuous growth of web applications around the globe, it is a challenge to find the suitable information needed for the user in a limited time.Number of handheld mobile devices is increasing and most of the business revolves around the correct search of the data. Without a proper recommender system it is very difficult to get required information from the web applications. Web applications use recommender systems to provide suitable data to users based on their choices and interests. For different kinds of needs different types of recommender systems have been proposed. Two most basic types of recommender systems are collaborative filtering recommender system and content based recommender system. Sometimes these two recommender systems are combined to increase the efficiency of a recommender system The generated new recommender system is known as hybrid recommender system.

The purpose of this paper is to help readers understand the basics of recommender systems. This paper identifies key areas of research openly available for new researchers. After reading this paper new researchers can understand basic problems of recommender systems which need improvement and hence they can make those problems their area of research.}
}

@article{Zhang_Survey,
author = {Zhang, Shuai and Yao, Lina and Sun, Aixin and Tay, Yi},
title = {Deep Learning Based Recommender System: A Survey and New Perspectives},
year = {2019},
issue_date = {January 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {52},
number = {1},
issn = {0360-0300},
url = {https://doi.org/10.1145/3285029},
doi = {10.1145/3285029},
abstract = {With the growing volume of online information, recommender systems have been an effective strategy to overcome information overload. The utility of recommender systems cannot be overstated, given their widespread adoption in many web applications, along with their potential impact to ameliorate many problems related to over-choice. In recent years, deep learning has garnered considerable interest in many research fields such as computer vision and natural language processing, owing not only to stellar performance but also to the attractive property of learning feature representations from scratch. The influence of deep learning is also pervasive, recently demonstrating its effectiveness when applied to information retrieval and recommender systems research. The field of deep learning in recommender system is flourishing. This article aims to provide a comprehensive review of recent research efforts on deep learning-based recommender systems. More concretely, we provide and devise a taxonomy of deep learning-based recommendation models, along with a comprehensive summary of the state of the art. Finally, we expand on current trends and provide new perspectives pertaining to this new and exciting development of the field.},
journal = {ACM Comput. Surv.},
month = {feb},
articleno = {5},
numpages = {38},
keywords = {Recommender system, deep learning, survey}
}

@Inbook{Aggarwal2016,
author="Aggarwal, Charu C.",
title="An Introduction to Recommender Systems",
bookTitle="Recommender Systems: The Textbook",
year="2016",
publisher="Springer International Publishing",
address="Cham",
abstract="The increasing importance of the Web as a medium for electronic and business transactions has served as a driving force for the development of recommender systems technology. An important catalyst in this regard is the ease with which the Web enables users to provide feedback about their likes or dislikes. For example, consider a scenario of a content provider such as Netflix. In such cases, users are able to easily provide feedback with a simple click of a mouse. A typical methodology to provide feedback is in the form of ratings, in which users select numerical values from a specific evaluation system (e.g., five-star rating system) that specify their likes and dislikes of various items.",
isbn="978-3-319-29659-3",
doi="10.1007/978-3-319-29659-3_1",
url="https://doi.org/10.1007/978-3-319-29659-3_1"
}

@Inbook{Gunawardana2022,
author="Gunawardana, Asela
and Shani, Guy
and Yogev, Sivan",
editor="Ricci, Francesco
and Rokach, Lior
and Shapira, Bracha",
title="Evaluating Recommender Systems",
bookTitle="Recommender Systems Handbook",
year="2022",
publisher="Springer US",
address="New York, NY",
abstract="Recommender systems are now popular both commercially and in the research community, where many approaches have been suggested for providing recommendations. In many cases a system designer that wishes to employ a recommendater system must choose between a set of candidate approaches. A first step towards selecting an appropriate algorithm is to decide which properties of the application to focus upon when making this choice. Indeed, recommender systems have a variety of properties that may affect user experience, such as accuracy, robustness, scalability, and so forth. In this paper we discuss how to compare recommenders based on a set of properties that are relevant for the application. We focus on comparative studies, where a few algorithms are compared using some evaluation metric, rather than absolute benchmarking of algorithms. We describe experimental settings appropriate for making choices between algorithms. We review three types of experiments, starting with an offline setting, where recommendation approaches are compared without user interaction, then reviewing user studies, where a small group of subjects experiment with the system and report on the experience, and finally describe large scale online experiments, where real user populations interact with the system. In each of these cases we describe types of questions that can be answered, and suggest protocols for experimentation. We also discuss how to draw trustworthy conclusions from the conducted experiments. We then review a large set of properties, and explain how to evaluate systems given relevant properties. We also survey a large set of evaluation metrics in the context of the property that they evaluate.",
isbn="978-1-0716-2197-4",
doi="10.1007/978-1-0716-2197-4_15",
url="https://doi.org/10.1007/978-1-0716-2197-4_15"
}

@online{deconstructing-recommender-systems,
title = {DECONSTRUCTING RECOMMENDER SYSTEMS},
author = {Joseph A. Konstan and John Riedl},
year = {2012},
month = {Sep 24},
url = {https://spectrum.ieee.org/deconstructing-recommender-systems}
}

@online{perspectiva-dados-IA-2023,
title = {Perspectiva de dados + IA 2023},
year = {2023},
author = {Databricks Lakehouse},
url = {https://www.databricks.com/br/resources/ebook/state-of-data-ai?scid=7018Y000001Fi0cQAC&utm_medium=paid+search&utm_source=google&utm_campaign=20613856686&utm_adgroup=152642604685&utm_content=ebook&utm_offer=state-of-data-ai&utm_ad=676095019567&utm_term=ia%20databricks&gad_source=1&gclid=CjwKCAiAi6uvBhADEiwAWiyRdhu4vCcRtEYsvjz_adMw9KeOlNlakog84AuYZQL8vwEIoNOzB1M97hoC2boQAvD_BwE},
organization = {Databricks Lakehouse}
}

@inproceedings{Suleimenov,
author = {Suleimenov, Ibragim E. and Vitulyova, Yelizaveta S. and Bakirov, Akhat S. and Gabrielyan, Oleg A.},
title = {Artificial Intelligence: what is it?},
year = {2020},
isbn = {9781450377492},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3397125.3397141},
doi = {10.1145/3397125.3397141},
abstract = {Based on the principle of dialectic symmetry formulated by the philosophy of dialectic positivism, an interpretation of the concept of "artificial intelligence" is proposed. This principle assumes the existence of a hierarchy of information objects, similar to the hierarchy, which reflects different levels of organization of matter (mechanical, chemical, biological, social). The construction of a hierarchy of information objects - information processing systems - allows us to interpret in the same way the essence of both artificial intelligence and the intelligence that a human being is endowed with. These are information processing systems referring to the highest levels of the specified hierarchy.},
booktitle = {Proceedings of the 2020 6th International Conference on Computer and Technology Applications},
numpages = {4},
keywords = {Artificial intelligence, dialectical positivism, information},
location = {Antalya, Turkey},
series = {ICCTA '20}
}

@inproceedings{Subramaniam,
author = {Chew, Lit-Jie and Haw, Su-Cheng and Subramaniam, Samini},
title = {Recommender System for Retail Domain: An Insight on Techniques and Evaluations},
year = {2020},
isbn = {9781450377034},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408066.3408101},
doi = {10.1145/3408066.3408101},
abstract = {Recommender system has been developed as a useful tool especially when we reached the era of big data and in the meanwhile the internet has been overwhelming with lots of choices. There is a need for people to filter the information to search for their needs and wants efficiently. E-commerce website such as Amazon and Netflix have been using recommender system to build and boost their sales through the personalization recommendation. With the success in the e-commerce area, researchers are keen on finding a method to boost traditional offline retailer sales thru the recommender system. Therefore, in this paper, we introduced the existing recommender system and discuss the method of filtering of each method. Then, we provide the overview of the recent paper in retailer and e-commerce domain to provide the insight and trends such as the filtering techniques and evaluation metric used. Several possible research direction has been discussed based on the current trends and problems.},
booktitle = {Proceedings of the 12th International Conference on Computer Modeling and Simulation},
numpages = {5},
keywords = {Collaborative filtering, Content-based filtering, Hybrid filtering, Recommender system},
location = {Brisbane, QLD, Australia},
series = {ICCMS '20}
}

@inproceedings{Karatzoglou,
author = {Karatzoglou, Alexandros and Hidasi, Bal\'{a}zs},
title = {Deep Learning for Recommender Systems},
year = {2017},
isbn = {9781450346528},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3109859.3109933},
doi = {10.1145/3109859.3109933},
abstract = {Deep Learning is one of the next big things in Recommendation Systems technology. The past few years have seen the tremendous success of deep neural networks in a number of complex machine learning tasks such as computer vision, natural language processing and speech recognition. After its relatively slow uptake by the recommender systems community, deep learning for recommender systems became widely popular in 2016.We believe that a tutorial on the topic of deep learning will do its share to further popularize the topic. Notable recent application areas are music recommendation, news recommendation, and session-based recommendation. The aim of the tutorial is to encourage the application of Deep Learning techniques in Recommender Systems, to further promote research in deep learning methods for Recommender Systems.},
booktitle = {Proceedings of the Eleventh ACM Conference on Recommender Systems},
numpages = {2},
keywords = {deep learning, recommender systems},
location = {Como, Italy},
series = {RecSys '17}
}

@InProceedings{Khusro,
author="Khusro, Shah
and Ali, Zafar
and Ullah, Irfan",
editor="Kim, Kuinam J.
and Joukov, Nikolai",
title="Recommender Systems: Issues, Challenges, and Research Opportunities",
booktitle="Information Science and Applications (ICISA) 2016",
year="2016",
publisher="Springer Singapore",
address="Singapore",
abstract="A recommender system is an Information Retrieval technology that improves access and proactively recommends relevant items to users by considering the users' explicitly mentioned preferences and objective behaviors. A recommender system is one of the major techniques that handle information overload problem of Information Retrieval by suggesting users with appropriate and relevant items. Today, several recommender systems have been developed for different domains however, these are not precise enough to fulfil the information needs of users. Therefore, it is necessary to build high quality recommender systems. In designing such recommenders, designers face several issues and challenges that need proper attention. This paper investigates and reports the current trends, issues, challenges, and research opportunities in developing high-quality recommender systems. If properly followed, these issues and challenges will introduce new research avenues and the goal towards fine-tuned and high-quality recommender systems can be achieved.",
isbn="978-981-10-0557-2"
}

@online{expressanalytics-cold-start-problem,
title = {Cold Start Problem},
author = {Express Analytics},
year = {2021},
url = {https://www.expressanalytics.com/blog/cold-start-problem/},
urldate = {2024-03-08}
}

@article{HEIDARI2022109835,
title = {An attention-based deep learning method for solving the cold-start and sparsity issues of recommender systems},
journal = {Knowledge-Based Systems},
volume = {256},
year = {2022},
issn = {0950-7051},
doi = {https://doi.org/10.1016/j.knosys.2022.109835},
url = {https://www.sciencedirect.com/science/article/pii/S0950705122009339},
author = {Narges Heidari and Parham Moradi and Abbas Koochari},
keywords = {Recommender systems, Matrix factorization, Deep learning, Attention mechanism},
abstract = {Matrix Factorization is a successful approach for generating an effective recommender system. However, most existing matrix factorization methods suffer from the sparsity and cold-start issues of the user-item matrix as the primary information source of recommender systems. Besides, they are not much scalable to apply to large real-world applications. A main idea to overcome the cold-start and sparsity issues is to use additional information sources such as user/item profiles or user reviews on items. In this paper, a novel Attention-based Deep Learning Recommender System, so-called ADLRS, is proposed to employ the information sources in the matrix factorization method framework. The proposed method uses a language model to represent contextual information such that important features are effectively embedded. Moreover, a deep autoencoder reduces the dimensionality of item vectors embedded by the language model. Then, these vectors are used as regularization terms in the matrix factorization framework to form an objective function. Then, an iterative algorithm is designed to solve the objective function and provide a method prediction of unknown rating values. Experimental results show that the proposed method achieves superior performance compared to other state-of-the-art ones in most cases. Moreover, the improvement rate for sparse datasets and cold items proves that the proposed method effectively deals with sparsity, cold start and scalability problems.}
}

@inproceedings{10.1145/2783258.2783270,
author = {Yan, Feng and Ruwase, Olatunji and He, Yuxiong and Chilimbi, Trishul},
title = {Performance Modeling and Scalability Optimization of Distributed Deep Learning Systems},
year = {2015},
isbn = {9781450336642},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2783258.2783270},
doi = {10.1145/2783258.2783270},
abstract = {Big deep neural network (DNN) models trained on large amounts of data have recently achieved the best accuracy on hard tasks, such as image and speech recognition. Training these DNNs using a cluster of commodity machines is a promising approach since training is time consuming and compute-intensive. To enable training of extremely large DNNs, models are partitioned across machines. To expedite training on very large data sets, multiple model replicas are trained in parallel on different subsets of the training examples with a global parameter server maintaining shared weights across these replicas. The correct choice for model and data partitioning and overall system provisioning is highly dependent on the DNN and distributed system hardware characteristics. These decisions currently require significant domain expertise and time consuming empirical state space exploration.This paper develops performance models that quantify the impact of these partitioning and provisioning decisions on overall distributed system performance and scalability. Also, we use these performance models to build a scalability optimizer that efficiently determines the optimal system configuration that minimizes DNN training time. We evaluate our performance models and scalability optimizer using a state-of-the-art distributed DNN training framework on two benchmark applications. The results show our performance models estimate DNN training time with high estimation accuracy and our scalability optimizer correctly chooses the best configurations, minimizing the training time of distributed DNNs.},
booktitle = {Proceedings of the 21th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining},
numpages = {10},
keywords = {scalability, performance modeling, optimization, distributed system, deep learning},
location = {Sydney, NSW, Australia},
series = {KDD '15}
}

@article{esperidiao2005,
author = {Esperidião, Monique},
title = {Avaliação de satisfação de usuários},
journal = {Cadernos de Saúde Pública},
volume = {21},
number = {Suplemento 1},
year = {2005},
url = {https://www.scielosp.org/pdf/csc/2005.v10suppl0/303-312/pt},
}

@article{minayo1993,
author = {Minayo, Maria Cecília de Souza and Sanches, Oswaldo},
title = {Quantitativo - Qualitativo: Oposição ou complementaridade?},
journal = {Cadernos de Saúde Pública},
volume = {9},
number = {3},
year = {1993},
}

@inproceedings{kingma2016improving,
title={Improving variational inference with inverse autoregressive flow},
author={Kingma, Diederik P and Salimans, Tim and Jozefowicz, Rafal and Chen, Xi and Sutskever, Ilya and Welling, Max},
booktitle={Advances in Neural Information Processing Systems},
year={2016}
}

@article{lomonaco2019continual,
title={Continual learning with deep architectures},
author={Lomonaco, Vincenzo},
year={2019},
publisher={alma}
}

@online{latexsite,
author = {The LaTeX Project Team},
title = {LaTeX - A document preparation system},
year = {2024},
url = {https://www.latex-project.org/},
urldate = {2024-04-01}
}

@online{pythonsite,
author = {Python Software Foundation},
title = {Python Programming Language},
year = {2024},
url = {https://www.python.org/},
urldate = {2024-04-01}
}

@online{kagglesite,
author = {Kaggle},
title = {Kaggle: Your Machine Learning and Data Science Community},
year = {2024},
url = {https://www.kaggle.com/},
urldate = {2024-04-01}
}

@online{colabsite,
author = {Google},
title = {Google Colaboratory},
year = {2024},
url = {https://colab.research.google.com/},
urldate = {2024-04-01}
}

@online{huggingsite,
author = {Hugging Face},
title = {Hugging Face - AI \& NLP Community},
year = {2024},
url = {https://huggingface.co/},
urldate = {2024-04-01}
}

@online{githubsite,
author = {GitHub, Inc.},
title = {GitHub: Where the world builds software},
year = {2024},
url = {https://github.com/},
urldate = {2024-04-01}
}

@online{gitsite,
author = {Git},
title = {Git},
url = {https://git-scm.com/},
year = {2024}
}

@online{pham2019recommendation,
author = {Pham, Khang},
title = {What are Recommendation Systems?},
year = {2019},
month = {11},
day = {26},
url = {https://medium.com/@khang.pham.exxact/what-are-recommendation-systems-6bb5036042db},
organization = {Medium},
}

@inproceedings{10.1145/2959100.2959120,
author = {Jacobson, Kurt and Murali, Vidhya and Newett, Edward and Whitman, Brian and Yon, Romain},
title = {Music Personalization at Spotify},
year = {2016},
isbn = {9781450340359},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2959100.2959120},
doi = {10.1145/2959100.2959120},
abstract = {Spotify is the world's largest on-demand music streaming company, with over 75 million active listeners choosing what to listen to among tens of millions songs. Discovery and personalization is a key part of the experience and critical to the success of the creator and consumer ecosystem. In this talk, we'll discuss the state of our current discovery approaches, such as the Discover Weekly playlist that has already streamed billions of new discoveries and Fresh Finds, a scalable platform for brand new music that focuses suggestions on the long end of the popularity tail. We'll discuss the technologies at scale necessary to distill the information about music from our listeners and the world at large we collect outside of Spotify -- with the massive amounts of user-item activity data we collect every day to create highly personalized music experiences. Entire teams at Spotify focus on understanding both the creator and listener through collaborative filtering, machine learning, DSP and NLP approaches -- we crawl the web for artist information, scan each note in every one of our millions of songs for acoustic signals, and model users' taste through a cluster analysis and in a latent space based on their historical and real-time listening patterns. The data generated by these analyses have ensured our discovery products are precise and help our users enjoy music and media across our entire catalog. We'll dive deep into the workings of Discover Weekly, our marquee personalized playlist which updates weekly and reached 1 billion streams within the first 10 weeks from its release. The technology behind Discover Weekly is powered by a scalable factor analysis of Spotify's over two billion user-generated playlists matched to each user's current listening behavior. We'll discuss its innovative genesis and the challenges and opportunities the system faces a year after its launch. We'll also discuss Spotify's home page, seen by each of our users, currently undergoing vast efforts around personalization to ensure each listener gets a targeted list of playlists, shows and music to select throughout their day. We'll discuss the various similarity metrics, ranking approaches and user modeling we're working on to increase precision and optimize for our users' happiness.},
booktitle = {Proceedings of the 10th ACM Conference on Recommender Systems},
numpages = {1},
keywords = {spotify, recommender system, music personalization, machine learning, discover weekly, data pipelines, collaborative filtering},
location = {Boston, Massachusetts, USA},
series = {RecSys '16}
}

@online{stratoflow-recommendation,
title = {Guide to Recommendation System},
howpublished = {Stratoflow},
url = {https://stratoflow.com/guide-to-recommendation-system/},
year = {2023}
}

@misc{nvidia-recommendation,
title = {Recommendation System},
author = {NVIDIA},
howpublished = {Website},
note = {Retrieved from \url{https://www.nvidia.com/en-us/glossary/recommendation-system/}},
year = {2024}
}

@article{allam2013user,
title={User experience: challenges and opportunities},
author={Allam, AH and Dahlan, Halina Mohamed},
journal={Journal of Information Systems Research and Innovation},
volume={3},
number={1},
year={2013}
}

@misc{iso9241-210,
title = {ISO FDIS 9241-210 (2009) Human-centred design process for interactive systems},
author = {ISO},
year = {2009},
howpublished = {Standard},
}

@INPROCEEDINGS{8673410,
author={Champiri, Zohreh Dehghani and Mujtaba, Ghulam and Salim, Siti Salwah and Yong Chong, Chun},
booktitle={2019 2nd International Conference on Computing, Mathematics and Engineering Technologies (iCoMET)}, 
title={User Experience and Recommender Systems}, 
year={2019},
volume={},
number={},
keywords={Usability;Task analysis;Recommender systems;Software engineering;Computer science;Information technology;Recommender system;User Experience;User eXperience;User Experience Models;User-centric evaluation;User Experience evaluation;Human-computer interaction},
doi={10.1109/ICOMET.2019.8673410}
}

@article{thorat2015survey,
title={Survey on collaborative filtering, content-based filtering and hybrid recommendation system},
author={Thorat, Poonam B and Goudar, Rajeshwari M and Barve, Sunita},
journal={International Journal of Computer Applications},
volume={110},
number={4},
year={2015},
publisher={Foundation of Computer Science}
}

@article{baidada2022hybrid,
title={Hybrid filtering recommendation system in an educational context: experiment in higher education in Morocco},
author={Baidada, Mohammed and Mansouri, Khalifa and Poirier, Franck},
journal={International Journal of Web-Based Learning and Teaching Technologies (IJWLTT)},
volume={17},
number={1},
year={2022},
publisher={IGI Global}
}

@article{burke2002hybrid,
title={Hybrid recommender systems: Survey and experiments},
author={Burke, Robin},
journal={User modeling and user-adapted interaction},
volume={12},
year={2002},
publisher={Springer}
}

@article{elSisi2020,
author={Fainan Nagy El Sisi and
        Hatem M. Abdul-Kader and
        Arabi El Said Keshk and
        Asma H. Elsaid},
title={A Review for Recommender System Models and Deep Learning},
journal={International Journal of Computer and Information},
volume={14},
number={1},
year={2020},
publisher={Faculty of Computers and Information, Menoufia University},
}

@article{zhang2020autoencoder,
author={Gang Zhang and
        Yuying Liu and
        Xiaohong Jin},
title={A survey of autoencoder-based recommender systems},
journal={Frontiers of Computer Science},
volume={14},
number={3},
year={2020},
month={April},
doi={10.1007/s11704-018-8052-6},
note={Received 12 February 2018, Accepted 09 November 2018, Published 30 August 2019},
}

@article{LeCun2015,
author  = {LeCun, Yann and Bengio, Yoshua and Hinton, Geoffrey},
title   = {Deep learning},
journal = {Nature},
volume  = {521},
number  = {7553},
year    = {2015},
month   = {May},
doi     = {10.1038/nature14539},
url     = {https://doi.org/10.1038/nature14539},
abstract= {Deep learning allows computational models that are composed of multiple processing layers to learn representations of data with multiple levels of abstraction. These methods have dramatically improved the state-of-the-art in speech recognition, visual object recognition, object detection and many other domains such as drug discovery and genomics. Deep learning discovers intricate structure in large data sets by using the backpropagation algorithm to indicate how a machine should change its internal parameters that are used to compute the representation in each layer from the representation in the previous layer. Deep convolutional nets have brought about breakthroughs in processing images, video, speech and audio, whereas recurrent nets have shone light on sequential data such as text and speech.},
issn    = {1476-4687},
}
